name: 0.1.$(Rev:r)

trigger:
  batch: true
  branches:
    include:
      - master

variables:
  - name: terraform_download_sha
    value: 43806e68f7af396449dd4577c6e5cb63c6dc4a253ae233e1dddc46cf423d808b
  - name: terraform_version
    value: 0.12.8
  - name: tf_in_automation
    value: true

stages:
  - stage: Build
    jobs:
      - job: Build

        pool:
          vmImage: 'ubuntu-latest'

        steps:
          - checkout: self
            fetchDepth: 1

          - task: Bash@3
            inputs:
              filePath: './scripts/terraform-download.sh'
            displayName: 'Terraform Download'

          - task: AzureCLI@1
            inputs:
              azureSubscription: 'Azure MSDN'
              scriptLocation: 'scriptPath'
              scriptPath: './scripts/environment-setup.sh'
              addSpnToEnvironment: true
              failOnStandardError: true
            displayName: 'Environment Setup'

          - task: Bash@3
            inputs:
              filePath: './scripts/terraform-init.sh'
              arguments: '$(Build.SourcesDirectory)'
              failOnStderr: true
            env:
              ARM_CLIENT_ID: $(AZURE_CLIENT_ID)
              ARM_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
              ARM_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(AZURE_TENANT_ID)
            displayName: 'Terraform Init'

          - task: Bash@3
            inputs:
              filePath: './scripts/terraform-plan.sh'
              arguments: '$(Build.SourcesDirectory)'
              failOnStderr: true
            env:
              ARM_CLIENT_ID: $(AZURE_CLIENT_ID)
              ARM_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
              ARM_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(AZURE_TENANT_ID)
            displayName: 'Terraform Plan'

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(Build.SourcesDirectory)'
              includeRootFolder: false
              archiveType: 'tar'
              tarCompression: 'gz'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).tgz'
              replaceExistingArchive: true
            displayName: 'Create Plan Artifact'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'
            displayName: 'Publish Plan Artifact'

  - stage: Deploy
    jobs:
      - deployment: DeployDev
        displayName: 'Dev Environment Deployment'
        pool:
          vmImage: 'ubuntu-latest'
        environment: 'dev'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: none

                - task: DownloadBuildArtifacts@0
                  inputs:
                    artifactName: 'drop'
                  displayName: 'Download Plan Artifact'

                - task: ExtractFiles@1
                  inputs:
                    archiveFilePatterns: '$(System.ArtifactsDirectory)/drop/$(Build.BuildId).tgz'
                    destinationFolder: '$(System.DefaultWorkingDirectory)/'
                    cleanDestinationFolder: false
                  displayName: 'Extract Plan Artifact'

                - task: Bash@3
                  inputs:
                    filePath: './scripts/terraform-download.sh'
                  displayName: 'Terraform Download'

                - task: AzureCLI@1
                  inputs:
                    azureSubscription: 'Azure MSDN'
                    scriptLocation: 'scriptPath'
                    scriptPath: './scripts/environment-setup.sh'
                    addSpnToEnvironment: true
                    failOnStandardError: true
                  displayName: 'Environment Setup'

                - task: Bash@3
                  inputs:
                    filePath: './scripts/terraform-apply.sh'
                    arguments: '$(Build.SourcesDirectory)'
                    failOnStderr: true
                  env:
                    ARM_CLIENT_ID: $(AZURE_CLIENT_ID)
                    ARM_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
                    ARM_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
                    ARM_TENANT_ID: $(AZURE_TENANT_ID)
                  displayName: 'Terraform Apply'
